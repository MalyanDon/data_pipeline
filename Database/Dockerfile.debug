FROM node:18-alpine

WORKDIR /app

# Install dependencies
RUN apk add --no-cache python3 py3-pip make g++ postgresql-client

# Copy package files first
COPY package*.json ./

# Install dependencies
RUN npm install --production

# Debug: Show what we have after npm install
RUN echo "=== After npm install ===" && ls -la

# Copy the main file EXPLICITLY first
COPY working-upload-system.js ./

# Debug: Check if main file was copied
RUN echo "=== After copying main file ===" && ls -la working-upload-system.js || echo "‚ùå Main file still not found!"

# Copy all other files
COPY . .

# Create upload directory
RUN mkdir -p temp_uploads

# Debug: Final check of all files
RUN echo "=== FINAL FILES IN /app ===" && ls -la

# Debug: Check if main file exists and is readable
RUN echo "=== MAIN FILE CHECK ===" && \
    if [ -f "working-upload-system.js" ]; then \
        echo "‚úÖ working-upload-system.js exists" && \
        echo "üìè File size: $(wc -c < working-upload-system.js) bytes" && \
        echo "üìÑ First few lines:" && head -3 working-upload-system.js; \
    else \
        echo "‚ùå working-upload-system.js MISSING!" && \
        echo "üìÅ Available files:" && ls -la *.js; \
    fi

# Debug: Show package.json start script
RUN echo "=== PACKAGE.JSON START SCRIPT ===" && \
    cat package.json | grep -A 2 -B 2 "start"

# Expose port
EXPOSE 3000

# Start with npm start
CMD ["npm", "start"] 