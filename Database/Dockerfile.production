# ===================================================
# PRODUCTION DOCKERFILE - RENDER DEPLOYMENT
# ===================================================

FROM node:18-alpine

# Set up working environment
WORKDIR /app

# Install all system dependencies in one layer
RUN apk add --no-cache \
    python3 \
    py3-pip \
    make \
    g++ \
    postgresql-client

# Copy package files first for better caching
COPY package*.json ./

# Install Node.js dependencies
RUN npm install --production && npm cache clean --force

# Copy the main application file explicitly
COPY working-upload-system.js ./

# Copy other necessary files
COPY config.js ./
COPY start.sh ./

# Copy any other files that might be needed
COPY *.md ./
COPY *.json ./

# Create necessary directories
RUN mkdir -p temp_uploads

# Make start script executable
RUN chmod +x start.sh

# Debug: List files to verify copying
RUN echo "üìÅ Files in /app:" && ls -la

# Application runs on port 3000
EXPOSE 3000

# Start the ETL data pipeline
CMD ["./start.sh"] 